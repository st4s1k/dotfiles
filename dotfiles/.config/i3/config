set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8
font pango:xos4 terminus, Awesome 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)

bindsym $mod+d exec rofi -show run

# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
# bindsym $mod+j focus left
# bindsym $mod+k focus down
# bindsym $mod+l focus up
# bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window

# bindsym $mod+Shift+j move left
# bindsym $mod+Shift+k move down
# bindsym $mod+Shift+l move up
# bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
# set $ws1 "1:"
set $ws2 "2"
# set $ws2 "2:"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.

	# bindsym j esize shrink width 10 px or 10 ppt
	# bindsym k resize grow height 10 px or 10 ppt
        # bindsym l resize shrink height 10 px or 10 ppt
        # bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Colors

#				variable			value		alternative_value
set_from_resource		$bg-color			color0		#ff0000
set_from_resource		$inactive-bg-color		color7		#ff0000
set_from_resource		$text-color			color15		#ff0000
set				$inactive-text-color		#676e7b 
set				$urgent-bg-color		#e53935
set				$bg-darker			#2b303b
set_from_resource		$border-color			color3		#ff0000
set_from_resource		$inactive-border-color		color7		#ff0000
set_from_resource		$urgent-border-color		color1		#ff0000

# window colors
#			border			background	text			indicator		child_border
client.focused		$border-color		$bg-color	$text-color		$border-color		$border-color
client.focused_inactive	$inactive-border-color	$bg-color	$text-color		$inactive-border-color	
client.unfocused	$inactive-border-color	$bg-color	$inactive-text-color	$inactive-border-color	
client.urgent		$urgent-border-color	$bg-color	$text-color		$urgent-border-color	

client.background	$bg-color

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar
bar {
	position top
  	tray_output primary
	status_command i3blocks -c $HOME/.config/i3/i3blocks.conf
	colors {
		background $bg-color
	    	separator #757575
		#			border			background		text
		focused_workspace	$border-color		$bg-color		$text-color
		inactive_workspace	$bg-color		$bg-color		$inactive-text-color
		urgent_workspace	$urgent-border-color	$bg-color		$urgent-border-color
	}
}

# thin borders & no title bar
#hide_edge_borders both
for_window [class="^.*"] border pixel 1
new_window 1pixel

# Key-bindings
# Dunst notifiactions test
bindsym $mod+u exec "sh $HOME/.config/dunst/dtest"
# Audio
# Alsa controls
bindsym XF86AudioRaiseVolume	exec "amixer -q sset Master 5%+ unmute && pkill -RTMIN+10 i3blocks && dunstify -r 314159 $(sh $HOME/.config/i3/scripts/volume)"
bindsym XF86AudioLowerVolume	exec "amixer -q sset Master 5%- unmute && pkill -RTMIN+10 i3blocks && dunstify -r 314159 $(sh $HOME/.config/i3/scripts/volume)"
bindsym XF86AudioMute		exec "amixer -q sset Master toggle && pkill -RTMIN+10 i3blocks && dunstify -r 314159 $(sh $HOME/.config/i3/scripts/volume)"
# Pulse Audio controls
#bindsym XF86AudioRaiseVolume	exec "pactl set-sink-volume 0 +5%; pkill -RTMIN+10 i3blocks"
#bindsym XF86AudioLowerVolume	exec "pactl set-sink-volume 0 -5%; pkill -RTMIN+10 i3blocks"
#bindsym XF86AudioMute		exec "pactl set-sink-mute 0 toggle; pkill -RTMIN+10 i3blocks"
# Sreen brightness controls
bindsym XF86MonBrightnessUp	exec "light -A 5"
bindsym XF86MonBrightnessDown	exec "light -U 5"

bindsym Print			exec "scrot $HOME/Pictures/screenshot-$(date +%F_%T).png -e 'xclip -selection c -t image/png < $f'"
bindsym Shift+Print --release	exec "scrot -s $HOME/Pictures/screenshot-$(date +%F_%T).png -e 'xclip -selection c -t image/png < $f'"

## Assign windows to workspaces
# Web Browser
set $web_browser "Firefox"
assign [class=$web_browser] $ws1
for_window [class=$web_browser] focus
# Terminal
#set $terminal_app "URxvt"
#assign [class=$terminal_app] $ws2
#for_window [class=$terminal_app] focus

## Startup
# Scripts
exec "$HOME/GitRepos/linux_config/backup.sh"
# Programs
exec --no-startup-id "compton -f"
exec --no-startup-id "redshift -t 6500:4000"
# i3 restart
exec_always "--no-startup-id $HOME/.config/polybar/launch.sh"
exec_always "setxkbmap -layout ro,ru"
exec_always "setxkbmap -option 'grp:alt_shift_toggle'"
exec_always "feh --bg-fill $HOME/.wallpaper.jpg"
exec_always "xrdb -merge $HOME/.Xresources"

## i3-gaps config

#smart_gaps on
#gaps inner 10
#gaps outer 10

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
